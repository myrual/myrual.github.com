---
layout: post
title: "go-lang"
date: 2012-06-08 23:00
comments: true
categories: 
---
今天早上写了第二个go lang程序， 测试一下UDP服务器的表现。 目前结论是在1800个线程的反复连接下，UDP服务进程的占用率上升到20%。 考虑到线程仅仅休息1ms就尝试重新连接，这个表现基本靠谱。   
另外发现mac上面对于单个进程能够打开的文件数量是有限制的，默认为256,这就可以理解为什么之前开多线程去连接服务器会遇到250线程的限制。 

用go语言写了两个小程序之后的感受：     
1. 语法内容少， 很容易掌握基本工具。     
2. chan和相关的操作是简单但是经过精心设计的强有力的工具。     
3. 具有动态语言的特性。 放弃了c语言的指针操作。提供了一些基本的高级数据结构。    
4. 只要是需要线程间需要传送数据，就应该使用chan，而不是使用共享内存。

我对于用go语言完成未来的TCPpush服务器感到压力不大， 而且一定一个线程对应一个socket。 这会极大的减轻后期维护的压力。

明天继续用go写代码，看看能不能找到更加简单的方案。

